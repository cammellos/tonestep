// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.5.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `to_keyboard_note`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `clone`, `eq`, `fmt`, `fmt`, `hash`

Future<List<Note>> getAllNotes() =>
    RustLib.instance.api.crateApiNotesGetAllNotes();

Future<void> stop() => RustLib.instance.api.crateApiNotesStop();

Future<void> playExercise({required Exercise exercise}) =>
    RustLib.instance.api.crateApiNotesPlayExercise(exercise: exercise);

class Exercise {
  final Note rootNote;
  final Note exerciseNote;

  const Exercise({
    required this.rootNote,
    required this.exerciseNote,
  });

  @override
  int get hashCode => rootNote.hashCode ^ exerciseNote.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Exercise &&
          runtimeType == other.runtimeType &&
          rootNote == other.rootNote &&
          exerciseNote == other.exerciseNote;
}

enum Note {
  one,
  flatTwo,
  two,
  three,
  flatThree,
  four,
  sharpFour,
  five,
  flatSix,
  six,
  flatSeven,
  seven,
  ;

  Future<int> toKeyboardC1Note() =>
      RustLib.instance.api.crateApiNotesNoteToKeyboardC1Note(
        that: this,
      );

  Future<int> toKeyboardC5Note() =>
      RustLib.instance.api.crateApiNotesNoteToKeyboardC5Note(
        that: this,
      );
}
